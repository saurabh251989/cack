HEADER <OPSW_DEVELOP_5_17>
&   <unit_test\testscripts\opsw\source\os_service\fcp_a\dfs_determine_function_schedule_af1_5.ptu>,
&   <PD1000006058_SDD_OPSW_A350_SFCC current 10.3>,
&   <sourcecode\opsw\source\os_service\fcp_a\dfs_determine_function_schedule_af1.c >
#/******************************************************************************/
#/*                                                                            */
#/* Copyright by     :   Diehl Aerospace GmbH Ueberlingen                      */
#/*                                                                            */
#/* Module Name      :    dfs_determine_function_schedule_af1_5.ptu            */
#/*                                                                            */
#/* Created By       :    Meena P                                              */
#/*                                                                            */
#/* Copyright:                                                                 */
#/*     This document contains Proprietary Information of                      */
#/*     Diehl Aerospace GmbH and may only be used by the recipient for         */
#/*     the prescribed purposes and may neither be reproduced in any form nor  */
#/*     the document itself or its content divulged to third parties without   */
#/*     the expressed prior written permission of                              */
#/*     Diehl Aerospace GmbH. All rights reserved.                             */
#/*                                                                            */
#/* Export Compliance:                                                         */
#/*                                                                            */
#/*     Transferred in accordance with Community General Export Authorisation  */
#/*     No. EU001, dated June 22, 2000.                                        */
#/*     Export license No. D329939                                             */
#/*                                                                            */
#/******************************************************************************/
--------------------------------------------------------------------------------
--
-- TESTED FILE INCLUDE DIRECTIVES 
--
--------------------------------------------------------------------------------
#  /* IMPORTED MODULES */
##include "dfs_determine_function_schedule_af1.h"
##include "STD_Standard_Types.h"
##include "DML_Data_Manager_Config.h"
##include "DMA_Data_Manager.h"
##include "S2M_Sync_2ms.h"
##include "DOR_Discrete_Out.h"
##include "ddo_dma_to_output.h"
##include "h02_hw_2ms.h"
##include "AGA_A429_Group_Administration.h"
##include "AIM_A429_Input_Monitoring.h"
##include "AOM_A429_Output_Monitoring_Reactions.h"
##include "CDD_copy_dir_to_dma.h"
##include "FSS_Fcp_Synchronisation_Services.h"
##include "IPP_IPA_Processor.h"
##include "IPT_IPA_Transceiver.h"
##include "IDS_IPA_Device_Driver_S2P.h"
##include "AGM_A429_Group_Management.h"
##include "AWG_A429_Word_Generation.h"
##include "mvp_vhdm_press_input_monitor.h"
##include "mls_load_sensor_input_monitor.h"
##include "sdd_spi_dac_driver.h"
##include "mwi_wtb_sensor_input_monitor.h"
##include "MDI_DSP_Input_Monitoring.h"
##include "MFI_FPPU_Input_Monitoring.h"
##include "MHP_HMot_Position_Monitoring.h"
##include "MHS_HMot_Swash_Plate_Monitoring.h"
##include "MDA_DSP_Analog_Monitoring.h"
##include "MDF_DFPPU_Input_Monitoring.h"
##include "MSI_SPPU_Input_Monitoring.h"
##include "ASP_Afdx_Sysstatus_Payload.h"
##include "MAO_Analogue_Output_Monitoring.h"
##include "FCS_Failure_Concentrator_Services.h"
##include "FSR_Fast_System_Reactions.h"
##include "FSE_Failure_Status_Exchange.h"
##include "DAM_Dataloader_Activation_Monitor.h"
##include "MAM_MK3_Activation_Monitor.h"
##include "MOI_OTSSU_Input_Monitoring.h"
##include "DMI_DSP_Message_In.h"
##include "OTC_Operation_Time_Counter.h"
##include "AFB_AFDX_FALRetransmission_Build.h"
##include "AFC_AFDX_Crdc_Acms_Build.h"
##include "NRF_NVM_Reset_Function.h"
##include "SYM_System_Movement.h"
##include "PFS_Pcu_Failure_Search_Test.h"
##include "IFD_Inboard_Flaps_Drive_Function.h"
##include "PUC_power_up_coding_detection.h"
##include "pdh_persistent_data_handler.h"
##include "SIH_S2p_Ioc_Handler.h"
##include "dte_detailed_test_result_exchange.h"
##include "SMF_System_Movement_FSR.h"
##include "tpc_target_position_configuration.h"

#/* Wrappers for SCADE Models */
##include "wrp_ales_adgblhensigmon.h"
##include "wrp_ares_adgbrhensigmon.h"
##include "wrp_alpo_adgblhpobmon.h"
##include "wrp_arpo_adgbrhpobmon.h"
##include "wrp_vevm_vdhmenvalvemon.h"
##include "wrp_vpob_vdhmpobmon.h"
##include "wrp_fxci_fxchaninpvotemon.h"
##include "wrp_fxxi_fxsfccxchinpvotemon.h"
##include "wrp_dinm_discrinputmon.h"
##include "wrp_acgd_acongrounddet.h"
##include "wrp_flpd_flapsleverposdetmon.h"
##include "wrp_fmcf_fmanctrlfct.h"
##include "wrp_fcdf_fcruisedeployfct.h"
##include "wrp_plpm_pculowpressmon.h"
##include "wrp_rtdl_rtdlogic.h"
##include "wrp_dhlp_detpcuhighlowpress.h"
##include "wrp_vpvm_vdhmpressvotemon.h"
##include "wrp_hspd_hydrsyspressdet.h"
##include "wrp_spcm_spycodingmon.h"
##include "wrp_fxlo_flapxlaneoutputmon.h"
##include "wrp_wtbs_wtbsensorvotemon.h"
##include "wrp_phpf_pcuhighpresfaultmon.h"
##include "wrp_wtbc_wtbcontroloutmon.h"
##include "wrp_msum_motorstartupmon.h"
##include "wrp_vplc_vdhmpowlimctrl.h"
##include "wrp_vspc_vdhmswashplatectrl.h"
##include "wrp_fmhm_flaphmotopsmon.h"
##include "wrp_vhsc_vdhmspeedctrl.h"
##include "wrp_ctpf_fdetctp.h"
##include "wrp_codi_configdiscrepancymo.h"
##include "wrp_vsum_vdhmstartupmon.h"
##include "wrp_vmo2_flapvdhmmonitor2ms.h"
##include "wrp_ffdm_flapfppudiscmon.h"
##include "wrp_fsum_fsysuncmdmovemon.h"
##include "wrp_foum_foutbuncmdmovemon.h"
##include "wrp_fsam_fsysasymmonfailval.h"
##include "wrp_sfom_sysfoverspeedvalmon.h"
##include "wrp_fsjm_fsysjamfailval.h"
##include "wrp_fobp_fobsurfposdatadet.h"
##include "wrp_fisp_fibsurfposdatadet.h"
##include "wrp_fltf_flaplateraltrimfct.h"
##include "wrp_vtrf_vdhmtorquerelieffct.h"
##include "wrp_mlgd_mlandgearongnddet.h"
##include "wrp_enad_engineactivedet.h"
##include "wrp_otdm_otssudiscmon.h"
##include "wrp_f1pf_flap1plusffunction.h"
##include "wrp_fcbf_flapcruisebaulkfunc.h"
##include "wrp_fsmc_flapskewmon.h"
##include "wrp_f3ff_f3plusffunc.h"
##include "wrp_flrf_floadrelieffunc.h"
##include "wrp_docm_degradedopconmon.h"
##include "wrp_ctpm_fdetctpma.h"
##include "wrp_apom_adgbpoboverheatmon.h"
##include "wrp_dpim_dualpcuinopconmon.h"
##include "wrp_ffrf_ffastretractfunc.h"
##include "wrp_fdrp_fdfsrecoveryproc.h"
##include "wrp_rtmo_resettypemon.h"
##include "wrp_frim_fretinhibitionmon.h"
##include "wrp_vasd_vdhmalphainisdet.h"
##include "wrp_fliv_floadsensifvotemon.h"
##include "wrp_flsi_flaploadsensintmon.h"
##include "wrp_fdsd_fdrivestrutdiscmon.h"
##include "wrp_mdfd_movdampfillleveldet.h"
##include "wrp_mdfm_movdampfilllevelmon.h"
##include "wrp_mddm_movdampdiscmon.h"
##include "wrp_mdem_movdampexcmastersel.h"
##include "wrp_mdsm_movdampsensormon.h"
##include "wrp_ft5j_flaptrack5jammon.h"
##include "wrp_ft3d_ftrack3discskewmon.h"
##include "wrp_flsf_floadsnsrflightmon.h"
##include "wrp_cmcf_commonmodectpmof.h"
##include "wrp_fcim_fcgscmdinhibitmon.h"
##include "wrp_s3pa_s3posanommon.h"

##include "ctd_ctpactive_test_determination.h"
##include "SYT_System_Test.h"
##include "SAT_Safety_Test.h"
##include "WET_WTB_Engagement_Test_FCP.h"
##include "WPP_WTB_POB_Performance_Test.h"
##include "WPF_WPP_Flap_Test.h"
##include "WTF_WPP_Test_Flap_States.h"
##include "MIS_MOG_IAM_Status.h"
##include "SCT_SPPU_Calibration_Tables.h"
##include "SCF_SPPU_Calibration_Function.h"
##include "FPJ_Flap_PCU_Jam_Monitor.h"
##include "IPM_AFDX_Input_Path_Monitor.h"

##include "DIR_Discrete_In.h"
##include "RAD_Restore_ARE_Data.h"
##include "DPX_DPR_Exchange.h"
--------------------------------------------------------------------------------
--
-- TESTED FILE DECLARATIONS
--
--------------------------------------------------------------------------------
-- Declarations of the global variables of the tested file

--------------------------------------------------------------------------------
--Temporary variables
--array declared to check the stub order
#uint32 PTU_StubOrder[200];
--index for above array
#uint8 PTU_Index=0;
--index for for loop to iterate to the correct number of cycles
#uint32 PTU_i=0;
--Flag to indicate whether to check for the stub order
#boolean PTU_CheckStubOrder=FALSE;

--------------------------------------------------------------------------------

BEGIN

--------------------------------------------------------------------------------
--
-- STUB DECLARATIONS OF THE TESTED OR INTEGRATED UNITS
--
--------------------------------------------------------------------------------

DEFINE STUB dfs_determine_function_schedule_af1_c 100

    #void OTC_OperationTimeCounter(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service\\fcp_a/OTC_Operation_Time_Counter.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1238; /* unique ID for this stub */
    #  }
    #}

    #void IPP_Set_Response(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/IPP_IPA_Processor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1237; /* unique ID for this stub */
    #  }
    #}

    #void RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/RAD_Restore_ARE_Data.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1236; /* unique ID for this stub */
    #  }
    #}

    #void PDH_Set_Cyclic_Data(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab/pdh_persistent_data_handler.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1235; /* unique ID for this stub */
    #  }
    #}

    #void DTE_Detailed_Results_Complete_Put(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions\\fcp_a/dte_detailed_test_result_exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1227; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_18ms_Flap1_Arinc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1116; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_18ms_Flap_Arinc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1115; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_18ms_Arinc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1114; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_18ms_Sensor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1113; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_18ms_Flap1_Sensor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1112; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_18ms_Flap_Sensor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1111; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_18ms_ARE(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1105; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_60ms_18ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1104; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_18ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1100; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_18ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1099; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_18ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1078; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_18ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1077; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_18ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1069; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_18ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1068; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vplc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_vplc_vdhmpowlimctrl.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1046; /* unique ID for this stub */
    #  }
    #}

    #void ASP_Sys_Status_Payload_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service\\fcp_a/ASP_Afdx_Sysstatus_Payload.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1226; /* unique ID for this stub */
    #  }
    #}

    #void AGM_Write_Output_Group(AGA_A429_Group_Id_Type _in GroupId) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AGM_A429_Group_Management.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1223; /* unique ID for this stub */
    #  }
    #}

    #void AWG_Generate_Retransmission_Words(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AWG_A429_Word_Generation.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1222; /* unique ID for this stub */
    #  }
    #}

    #void AWG_Generate_A429_Words_60ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AWG_A429_Word_Generation.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1221; /* unique ID for this stub */
    #  }
    #}

    #void FCS_Perform_Failure_Concentration(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\appli/FCS_Failure_Concentrator_Services.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1220; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_frim(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_frim_fretinhibitionmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1186; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_dinm_20ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_dinm_discrinputmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1150; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_flsf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_flsf_floadsnsrflightmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1148; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_flsi(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_flsi_flaploadsensintmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1147; /* unique ID for this stub */
    #  }
    #}

    #void SCT_Monitor_Cal_Table_CRC(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service\\fcp_a/SCT_SPPU_Calibration_Tables.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1141; /* unique ID for this stub */
    #  }
    #}

    #void AOM_Failure_Reaction_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service\\fcp_a/AOM_A429_Output_Monitoring_Reactions.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1122; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_1000ms_16ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1110; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_1000ms_16ms_Flap1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1109; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_1000ms_16ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1108; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_60ms_16ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1103; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_60ms_16ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1102; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_16ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1083; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_16ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1076; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_otdm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_otdm_otssudiscmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1185; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ffdm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_ffdm_flapfppudiscmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1184; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_14ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1098; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_14ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1075; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_14ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1074; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_14ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1067; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fxxi(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fxxi_fxsfccxchinpvotemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1040; /* unique ID for this stub */
    #  }
    #}

    #void AIM_XSFCC_XCH_Input_Data_Monitoring(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AIM_A429_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1039; /* unique ID for this stub */
    #  }
    #}

    #void AIM_Init_Groups(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AIM_A429_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1037; /* unique ID for this stub */
    #  }
    #}

    #void AGA_Initialise(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AGA_A429_Group_Administration.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1036; /* unique ID for this stub */
    #  }
    #}

    #void AFC_Build_Flap_CRDC_ACMS_Data_Msg(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AFC_AFDX_Crdc_Acms_Build.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1225; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fsjm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fsjm_fsysjamfailval.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1187; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_codi(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_codi_configdiscrepancymo.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1177; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_dpim(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_dpim_dualpcuinopconmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1174; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_docm_1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_docm_degradedopconmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1172; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ft3d(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_ft3d_ftrack3discskewmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1171; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_apom(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_apom_adgbpoboverheatmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1168; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fxlo(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fxlo_flapxlaneoutputmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1159; /* unique ID for this stub */
    #  }
    #}

    #void WRP_RTMO_HWReset_Reaction_Reset_100_Ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_rtmo_resettypemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1152; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_spcm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_spcm_spycodingmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1145; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_12ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1073; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_12ms_Flap1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1066; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fxci(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fxci_fxchaninpvotemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1042; /* unique ID for this stub */
    #  }
    #}

    #void AIM_XCH_Input_Data_Monitoring(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AIM_A429_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1041; /* unique ID for this stub */
    #  }
    #}

    #void AIM_Check_For_Group_Update_Fail(AGA_A429_Group_Id_Type _in GroupId) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AIM_A429_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1038; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_wtbs(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_wtbs_wtbsensorvotemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1019; /* unique ID for this stub */
    #  }
    #}

    #void MWI_Monitor_WTB_Sensor_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/mwi_wtb_sensor_input_monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1018; /* unique ID for this stub */
    #  }
    #}

    #void DMI_Read_From_HW_20ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver/DMI_DSP_Message_In.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1009; /* unique ID for this stub */
    #  }
    #}

    #void PFS_Perform_Test(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/PFS_Pcu_Failure_Search_Test.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1211; /* unique ID for this stub */
    #  }
    #}

    #void SMF_SoloDS_FSR(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\appli/SMF_System_Movement_FSR.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1131; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_10ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1096; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_10ms_Flap1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1095; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_10ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1094; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_60ms_10ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1072; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_10ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1065; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_10ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1064; /* unique ID for this stub */
    #  }
    #}

    #void SYM_Perform_System_Movement(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\appli\\fcp_a/SYM_System_Movement.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1045; /* unique ID for this stub */
    #  }
    #}

    #void WET_WTB_Engagement_Test(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/WET_WTB_Engagement_Test_FCP.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1219; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ctpf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_ctpf_fdetctp.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1206; /* unique ID for this stub */
    #  }
    #}

    #void ctd_flap_ctpactive_test_determination(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/ctd_ctpactive_test_determination.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1205; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fcbf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fcbf_flapcruisebaulkfunc.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1204; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ffrf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_ffrf_ffastretractfunc.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1203; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fcdf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fcdf_fcruisedeployfct.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1202; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fdrp(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fdrp_fdfsrecoveryproc.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1201; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fltf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fltf_flaplateraltrimfct.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1200; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ctpm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_ctpm_fdetctpma.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1199; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_flrf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_flrf_floadrelieffunc.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1198; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_f3ff(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_f3ff_f3plusffunc.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1197; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_f1pf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_f1pf_flap1plusffunction.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1196; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fobp() /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fobp_fobsurfposdatadet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1195; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fisp() /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fisp_fibsurfposdatadet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1194; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fmcf_A(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fmcf_fmanctrlfct.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1193; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_mdem(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_mdem_movdampexcmastersel.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1192; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_foum(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_foum_foutbuncmdmovemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1181; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fsum(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_fsum_fsysuncmdmovemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1180; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_phpf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_phpf_pcuhighpresfaultmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1179; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_plpm_yellow(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_plpm_pculowpressmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1178; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vtrf(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vtrf_vdhmtorquerelieffct.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1161; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_40ms_8ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1071; /* unique ID for this stub */
    #  }
    #}

    #void NRF_NVMResetFunction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/NRF_NVM_Reset_Function.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1210; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_mddm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_mddm_movdampdiscmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1191; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_mdfm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_mdfm_movdampfilllevelmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1190; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_mdfd(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_mdfd_movdampfillleveldet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1189; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_rtdl(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_rtdl_rtdlogic.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1182; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_hspd(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_hspd_hydrsyspressdet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1154; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_flpd_A(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_flpd_flapsleverposdetmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1153; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_dhlp(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_dhlp_detpcuhighlowpress.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1149; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_arpo_reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_arpo_adgbrhpobmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1135; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ares_reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_ares_adgbrhensigmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1134; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_alpo_reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_alpo_adgblhpobmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1133; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ales_reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_ales_adgblhensigmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1132; /* unique ID for this stub */
    #  }
    #}

    #void MDA_DSP_Analog_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MDA_DSP_Analog_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1121; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_100ms_6ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1107; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_40ms_6ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1101; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_6ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1093; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_6ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1092; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_1000ms_6ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1082; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_100ms_6ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1081; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_6ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1063; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_6ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1062; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_arpo(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_arpo_adgbrhpobmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1030; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ares(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_ares_adgbrhensigmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1029; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_alpo(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_alpo_adgblhpobmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1028; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ales(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_ales_adgblhensigmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1027; /* unique ID for this stub */
    #  }
    #}

    #void cdd_copy_discretes_to_data_manager(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/CDD_copy_dir_to_dma.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1010; /* unique ID for this stub */
    #  }
    #}

    #void DIR_Read_From_HW(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver\\fcp_a/DIR_Discrete_In.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1006; /* unique ID for this stub */
    #  }
    #}

    #void AFB_Build_Flap_FAL_Retransmission_Msg(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AFB_AFDX_FALRetransmission_Build.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1224; /* unique ID for this stub */
    #  }
    #}

    #void IFD_Perform_Inboard_Flaps_Drive_Function(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/IFD_Inboard_Flaps_Drive_Function.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1218; /* unique ID for this stub */
    #  }
    #}

    #void WPP_Reset_AFDX_Flags(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/WPP_WTB_POB_Performance_Test.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1217; /* unique ID for this stub */
    #  }
    #}

    #void WPP_Check_For_Lever_Reset(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/WPP_WTB_POB_Performance_Test.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1216; /* unique ID for this stub */
    #  }
    #}

    #void WPF_Flap_WTB_POB_Performance_Test(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/WPF_WPP_Flap_Test.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1215; /* unique ID for this stub */
    #  }
    #}

    #void WET_WTB_Engagement_Test_Pre(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/WET_WTB_Engagement_Test_FCP.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1214; /* unique ID for this stub */
    #  }
    #}

    #void SAT_Perform_Safety_Test(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/SAT_Safety_Test.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1213; /* unique ID for this stub */
    #  }
    #}

    #void SYT_Perform_System_Test(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/SYT_System_Test.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1212; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_mdsm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_mdsm_movdampsensormon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1188; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vpvm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vpvm_vdhmpressvotemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1176; /* unique ID for this stub */
    #  }
    #}

    #void MAM_MK3_Activation_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mk3_service\\fcp_ab/MAM_MK3_Activation_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1144; /* unique ID for this stub */
    #  }
    #}

    #void DAM_Dl_Start_Determination(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\dataloader_service\\fcp_ab/DAM_Dataloader_Activation_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1143; /* unique ID for this stub */
    #  }
    #}

    #void DAM_Dl_Activation_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\dataloader_service\\fcp_ab/DAM_Dataloader_Activation_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1142; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_CMCF_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code\\fcp_a/wrp_cmcf_commonmodectpmof.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1139; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_wtbc_reaction_flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_wtbc_wtbcontroloutmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1125; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_100ms_4ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1106; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_4ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1091; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_10ms_4ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1087; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_40ms_4ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1070; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_4ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1061; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_4ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1060; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_10ms_4ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1053; /* unique ID for this stub */
    #  }
    #}

    #void MAM_Pre_MK3_Activation_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mk3_service\\fcp_ab/MAM_MK3_Activation_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1044; /* unique ID for this stub */
    #  }
    #}

    #void DAM_Pre_Dl_Activation_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\dataloader_service\\fcp_ab/DAM_Dataloader_Activation_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1043; /* unique ID for this stub */
    #  }
    #}

    #void SCF_SPPU_Calib_Function(boolean _in Allow_Op) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/SCF_SPPU_Calibration_Function.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1035; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_wtbc_flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_wtbc_wtbcontroloutmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1026; /* unique ID for this stub */
    #  }
    #}

    #void AGM_Read_Input_Group(AGA_A429_Group_Id_Type _in GroupId) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/AGM_A429_Group_Management.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1014; /* unique ID for this stub */
    #  }
    #}

    #void MIS_Determine_IAM_AF_Inhibits(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/MIS_MOG_IAM_Status.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1209; /* unique ID for this stub */
    #  }
    #}

    #void MIS_Determine_MOG_IAM_Status(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/MIS_MOG_IAM_Status.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1208; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fsam(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fsam_fsysasymmonfailval.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1173; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fdsd(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fdsd_fdrivestrutdiscmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1169; /* unique ID for this stub */
    #  }
    #}

    #void MVP_Monitor_VHDM_Pressure_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/mvp_vhdm_press_input_monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1160; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_enad(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_enad_engineactivedet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1158; /* unique ID for this stub */
    #  }
    #}

    #void PUC_Periodic_Check_InstMode(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab/PUC_power_up_coding_detection.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1157; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_acgd(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_acgd_acongrounddet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1156; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_mlgd_A(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_mlgd_mlandgearongnddet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1155; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_dinm_4ms_flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_dinm_discrinputmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1151; /* unique ID for this stub */
    #  }
    #}

    #void MAO_Failure_Reaction_A(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MAO_Analogue_Output_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1138; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vpob_reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vpob_vdhmpobmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1137; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vevm_reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vevm_vdhmenvalvemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1136; /* unique ID for this stub */
    #  }
    #}

    #void MSI_SPPU_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MSI_SPPU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1128; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fcim(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fcim_fcgscmdinhibitmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1120; /* unique ID for this stub */
    #  }
    #}

    #void IPM_Post_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/IPM_AFDX_Input_Path_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1119; /* unique ID for this stub */
    #  }
    #}

    #void IPM_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/IPM_AFDX_Input_Path_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1118; /* unique ID for this stub */
    #  }
    #}

    #void IPM_Pre_Monitor(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/IPM_AFDX_Input_Path_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1117; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_4ms_2ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1086; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_2ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1059; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_2ms_Flap1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1058; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_2ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1057; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_4ms_2ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1052; /* unique ID for this stub */
    #  }
    #}

    #void SCT_Derive_Calibrated_Values(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/SCT_SPPU_Calibration_Tables.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1034; /* unique ID for this stub */
    #  }
    #}

    #void SCT_Derive_Normalised_Values(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/SCT_SPPU_Calibration_Tables.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1033; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vpob(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vpob_vdhmpobmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1032; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vevm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vevm_vdhmenvalvemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1031; /* unique ID for this stub */
    #  }
    #}

    #void MSI_Monitor_SPPU_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MSI_SPPU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1022; /* unique ID for this stub */
    #  }
    #}

    #void MDI_Monitor_DSP_Inputs_4ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MDI_DSP_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1016; /* unique ID for this stub */
    #  }
    #}

    #void cdd_copy_frequency_data_to_dma(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/CDD_copy_dir_to_dma.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1013; /* unique ID for this stub */
    #  }
    #}

    #void cdd_copy_analogue_data_to_dma(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/CDD_copy_dir_to_dma.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1012; /* unique ID for this stub */
    #  }
    #}

    #void cdd_copy_discrete_s2p_data_to_dma(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/CDD_copy_dir_to_dma.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1011; /* unique ID for this stub */
    #  }
    #}

    #void DMI_Read_From_HW_4ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver/DMI_DSP_Message_In.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1008; /* unique ID for this stub */
    #  }
    #}

    #void IPP_Process_Request(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/IPP_IPA_Processor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1002; /* unique ID for this stub */
    #  }
    #}

    #void IPP_Update_Request(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/IPP_IPA_Processor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1001; /* unique ID for this stub */
    #  }
    #}

    #void H02_HW_Out(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver/h02_hw_2ms.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1234; /* unique ID for this stub */
    #  }
    #}

    #void DOR_Wdt_Refresh(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver\\fcp_a/DOR_Discrete_Out.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1233; /* unique ID for this stub */
    #  }
    #}

    #void DDO_copy_data_manager_to_disc_out(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/ddo_dma_to_output.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1232; /* unique ID for this stub */
    #  }
    #}

    #void DDO_copy_data_manager_to_s2p_out(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/ddo_dma_to_output.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1231; /* unique ID for this stub */
    #  }
    #}

    #void FSR_Perform_Core_Fast_System_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\appli/FSR_Fast_System_Reactions.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1230; /* unique ID for this stub */
    #  }
    #}

    #void FCS_Reset_Core_Fast_System_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\appli/FCS_Failure_Concentrator_Services.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1229; /* unique ID for this stub */
    #  }
    #}

    #void FSE_Process_Failure_Event_DPRAM(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/FSE_Failure_Status_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1228; /* unique ID for this stub */
    #  }
    #}

    #void WTF_Calculate_OTSSU_Stop_Angle(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\test_functions/WTF_WPP_Test_Flap_States.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1207; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fsmc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fsmc_flapskewmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1183; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_sfom(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_sfom_sysfoverspeedvalmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1175; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_ft5j(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_ft5j_flaptrack5jammon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1170; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_msum(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_msum_motorstartupmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1167; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fmhm(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fmhm_flaphmotopsmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1166; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vmo2(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vmo2_flapvdhmmonitor2ms.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1165; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vsum(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vsum_vdhmstartupmon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1164; /* unique ID for this stub */
    #  }
    #}

    #void SDD_Write_To_HW(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver\\fcp_a/sdd_spi_dac_driver.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1163; /* unique ID for this stub */
    #  }
    #}

    #void DDO_copy_data_manager_to_spi_out(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/ddo_dma_to_output.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1162; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_fliv(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_fliv_floadsensifvotemon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1146; /* unique ID for this stub */
    #  }
    #}

    #void SCT_Monitor_Cal_Table_AC_Reg_Number(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/SCT_SPPU_Calibration_Tables.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1140; /* unique ID for this stub */
    #  }
    #}

    #void MHP_HMot_Position_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MHP_HMot_Position_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1130; /* unique ID for this stub */
    #  }
    #}

    #void MHS_HMot_Swash_Plate_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MHS_HMot_Swash_Plate_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1129; /* unique ID for this stub */
    #  }
    #}

    #void MOI_OTSSU_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MOI_OTSSU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1127; /* unique ID for this stub */
    #  }
    #}

    #void MDF_DFPPU_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MDF_DFPPU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1126; /* unique ID for this stub */
    #  }
    #}

    #void MFI_FPPU_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MFI_FPPU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1124; /* unique ID for this stub */
    #  }
    #}

    #void MDI_DSP_Failure_Reaction(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MDI_DSP_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1123; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_0ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1090; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_0ms_Flap1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1089; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_20ms_0ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1088; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Receive_2ms_0ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1085; /* unique ID for this stub */
    #  }
    #}

    #void FSS_Synchronise_Cycle(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab/FSS_Fcp_Synchronisation_Services.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1084; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_100ms_0ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1080; /* unique ID for this stub */
    #  }
    #}

    #void PUC_Prepare_Coding_Exchange(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab/PUC_power_up_coding_detection.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1079; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_0ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1056; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_0ms_Flap1(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1055; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_20ms_0ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1054; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_2ms_0ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1051; /* unique ID for this stub */
    #  }
    #}

    #void DPX_Send_2ms_0ms_Flap(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/DPX_DPR_Exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1050; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vasd(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vasd_vdhmalphainisdet.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1049; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vspc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vspc_vdhmswashplatectrl.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1048; /* unique ID for this stub */
    #  }
    #}

    #void wrp_call_vhsc(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_vhsc_vdhmspeedctrl.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1047; /* unique ID for this stub */
    #  }
    #}

    #void MLS_Monitor_Load_Sensor_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/mls_load_sensor_input_monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1025; /* unique ID for this stub */
    #  }
    #}

    #void MHP_Monitor_HMot_Position(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MHP_HMot_Position_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1024; /* unique ID for this stub */
    #  }
    #}

    #void MHS_Monitor_HMot_Swash_Plate(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MHS_HMot_Swash_Plate_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1023; /* unique ID for this stub */
    #  }
    #}

    #void MOI_Monitor_OTSSU_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MOI_OTSSU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1021; /* unique ID for this stub */
    #  }
    #}

    #void MDF_Monitor_DFPPU_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MDF_DFPPU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1020; /* unique ID for this stub */
    #  }
    #}

    #void MFI_Monitor_FPPU_Input(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MFI_FPPU_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1017; /* unique ID for this stub */
    #  }
    #}

    #void MDI_Monitor_DSP_Inputs_2ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/MDI_DSP_Input_Monitoring.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1015; /* unique ID for this stub */
    #  }
    #}

    #void DMI_Read_From_HW_2ms(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver/DMI_DSP_Message_In.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1007; /* unique ID for this stub */
    #  }
    #}

    #void SIH_Read_From_HW(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab/SIH_S2p_Ioc_Handler.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1005; /* unique ID for this stub */
    #  }
    #}

    #void IPT_Receive_Transmit_Request(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a/IPT_IPA_Transceiver.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1004; /* unique ID for this stub */
    #  }
    #}

    #void IDS_S2P_Receive_IPA_Message(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver\\fcp_a/IDS_IPA_Device_Driver_S2P.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1003; /* unique ID for this stub */
    #  }
    #}

    #void S2M_Sync_2ms_toggle(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\hw_driver/S2M_Sync_2ms.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1000; /* unique ID for this stub */
    #  }
    #}
    #void SCT_Monitor_Cal_Table_Header(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\mio_service/SCT_SPPU_Calibration_Tables.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1300; /* unique ID for this stub */
    #  }
    #} 
    #void tpc_Determine_Target_Positions(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\other/tpc_target_position_configuration.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1301; /* unique ID for this stub */
    #  }
    #}
    #void DPX_Send_OTC(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_a\dpx_dpr_exchange.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1302; /* unique ID for this stub */
    #  }
    #}
    
    #DMA_Entry_Type DMA_Database[DML_NUM_ENTRIES]; /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service/DMA_Data_Manager.h */
    #void wrp_call_s3pa(void) /* V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\os_service\\fcp_ab\\wrapper_scade_manual_code/wrp_s3pa_s3posanommon.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1244; /* unique ID for this stub */
    #  }
    #}    

    #void FPJ_Flap_PCU_Jam_Function(void) /*  V:\\A350_SFCC_SW\\sourcecode\\opsw\\source\\appli/FPJ_Flap_PCU_Jam_Monitor.h */
    #{
    #  if (PTU_CheckStubOrder)
    #  {
    #     PTU_StubOrder[PTU_Index++] = 1245; /* unique ID for this stub */
    #  }
    #}

END DEFINE
--------------------------------------------------------------------------------
--
-- ENVIRONMENTS DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- TESTED FILE ENVIRONNEMENT
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--
-- SERVICES DECLARATIONS
--
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Declaration of the service DFS_8ms_Services_AF1
--------------------------------------------------------------------------------
SERVICE DFS_8ms_Services_AF1
SERVICE_TYPE extern

ENVIRONMENT ENV_DFS_8ms_Services_AF1

ARRAY DMA_Database[0..DML_NUM_ENTRIES-1].Data,        init = { others => 0 },    ev = init

END ENVIRONMENT -- ENV_DFS_8ms_Services_AF1
USE ENV_DFS_8ms_Services_AF1

    TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.1
    FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={  0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,
                                 &30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,35=>1192,
                                 &36=>1193,37=>1194,38=>1195,39=>1209,40=>1207,41=>1219,42=>1228,
                                 &43=>1230,44=>1231,45=>1232,46=>1162,47=>1234,others=>0 }

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 0ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_Initialise_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.1

   TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.2
   FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB DMI_Read_From_HW_4ms()
      STUB cdd_copy_discrete_s2p_data_to_dma()
      STUB cdd_copy_analogue_data_to_dma()
      STUB cdd_copy_frequency_data_to_dma()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MDI_Monitor_DSP_Inputs_4ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MSI_Monitor_SPPU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB SCT_Derive_Normalised_Values()
      STUB SCT_Derive_Calibrated_Values()
      STUB wrp_call_vplc()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_4ms_2ms_Flap()
      STUB DPX_Send_20ms_18ms_Flap()
      STUB DPX_Send_20ms_18ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB DPX_Receive_4ms_2ms_Flap()
      STUB DPX_Receive_20ms_18ms_Flap()
      STUB DPX_Receive_20ms_18ms()
      STUB DPX_Send_1000ms_18ms_Flap_Sensor()
      STUB DPX_Send_1000ms_18ms_Flap1_Sensor()
      STUB DPX_Send_1000ms_18ms_Sensor()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MSI_SPPU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB MAO_Failure_Reaction_A()
      STUB wrp_call_fliv()
      STUB wrp_call_dinm_4ms_flap()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_fsam()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB DTE_Detailed_Results_Complete_Put()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB PDH_Set_Cyclic_Data()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA()
      STUB IPP_Process_Request()
      STUB IPP_Set_Response()
      
      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #DFS_18ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.2

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.2
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={   0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                  &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,12=>1047,
                                  &13=>1048,14=>1050,15=>1051,16=>1084,17=>1085,18=>1123,
                                  &19=>1124,20=>1126,21=>1127,22=>1129,23=>1130,24=>1146,
                                  &25=>1162,26=>1163,27=>1165,28=>1166,29=>1175,30=>1178,
                                  &31=>1179,32=>1180,33=>1181,34=>1193,35=>1194,36=>1195,
                                  &37=>1207,38=>1228,39=>1230,40=>1231,41=>1232,42=>1162,
                                  &43=>1234,others=>0 }

      

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 20ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      
      END ELEMENT

    END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.2

    TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.3
    FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB DMI_Read_From_HW_4ms()
      STUB cdd_copy_discrete_s2p_data_to_dma()
      STUB cdd_copy_analogue_data_to_dma()
      STUB cdd_copy_frequency_data_to_dma()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MDI_Monitor_DSP_Inputs_4ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MSI_Monitor_SPPU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB SCT_Derive_Normalised_Values()
      STUB SCT_Derive_Calibrated_Values()
      STUB wrp_call_vplc()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_4ms_2ms_Flap()
      STUB DPX_Send_20ms_18ms_Flap()
      STUB DPX_Send_20ms_18ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB DPX_Receive_4ms_2ms_Flap()
      STUB DPX_Receive_20ms_18ms_Flap()
      STUB DPX_Receive_20ms_18ms()
      STUB DPX_Send_1000ms_18ms_Flap1_Arinc()
      STUB DPX_Send_1000ms_18ms_Flap_Arinc()
      STUB DPX_Send_1000ms_18ms_Arinc()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MSI_SPPU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB MAO_Failure_Reaction_A()
      STUB wrp_call_fliv()
      STUB wrp_call_dinm_4ms_flap()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_fsam()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB DTE_Detailed_Results_Complete_Put()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB PDH_Set_Cyclic_Data()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA()
      STUB IPP_Process_Request()
      STUB IPP_Set_Response()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #DFS_18ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.3

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.3
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,30=>1175,
                                 &31=>1178,32=>1179,33=>1180,34=>1181,35=>1193,36=>1194,
                                 &37=>1195,38=>1209,39=>1207,40=>1219,41=>1228,42=>1230,43=>1231,
                                 &44=>1232,45=>1162,46=>1234,others=>0 }

      

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 40ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.3

   TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.4
   FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB DMI_Read_From_HW_4ms()
      STUB cdd_copy_discrete_s2p_data_to_dma()
      STUB cdd_copy_analogue_data_to_dma()
      STUB cdd_copy_frequency_data_to_dma()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MDI_Monitor_DSP_Inputs_4ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MSI_Monitor_SPPU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB SCT_Derive_Normalised_Values()
      STUB SCT_Derive_Calibrated_Values()
      STUB wrp_call_vplc()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_4ms_2ms_Flap()
      STUB DPX_Send_20ms_18ms_Flap()
      STUB DPX_Send_20ms_18ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB DPX_Receive_4ms_2ms_Flap()
      STUB DPX_Receive_20ms_18ms_Flap()
      STUB DPX_Receive_20ms_18ms()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MSI_SPPU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB MAO_Failure_Reaction_A()
      STUB wrp_call_fliv()
      STUB wrp_call_dinm_4ms_flap()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_fsam()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB DTE_Detailed_Results_Complete_Put()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB PDH_Set_Cyclic_Data()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA()
      STUB IPP_Process_Request()
      STUB IPP_Set_Response()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #DFS_18ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.4

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.4
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;
      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1084,17=>1085,
                                 &18=>1123,19=>1124,20=>1126,21=>1127,22=>1129,23=>1130,
                                 &24=>1146,25=>1162,26=>1163,27=>1165,28=>1166,29=>1175,
                                 &30=>1178,31=>1179,32=>1180,33=>1181,34=>1192,35=>1193,
                                 &36=>1194,37=>1195,38=>1207,39=>1228,40=>1230,41=>1231,
                                 &42=>1232,43=>1162,44=>1234,others=>0 }

     

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 60ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.4

   TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.5
   FAMILY nominal

      ELEMENT

        --Don't care stubs
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB DMI_Read_From_HW_4ms()
      STUB cdd_copy_discrete_s2p_data_to_dma()
      STUB cdd_copy_analogue_data_to_dma()
      STUB cdd_copy_frequency_data_to_dma()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MDI_Monitor_DSP_Inputs_4ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MSI_Monitor_SPPU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB SCT_Derive_Normalised_Values()
      STUB SCT_Derive_Calibrated_Values()
      STUB wrp_call_vplc()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_4ms_2ms_Flap()
      STUB DPX_Send_20ms_18ms_Flap()
      STUB DPX_Send_20ms_18ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB DPX_Receive_4ms_2ms_Flap()
      STUB DPX_Receive_20ms_18ms_Flap()
      STUB DPX_Receive_20ms_18ms()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MSI_SPPU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB MAO_Failure_Reaction_A()
      STUB wrp_call_fliv()
      STUB wrp_call_dinm_4ms_flap()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_fsam()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB DTE_Detailed_Results_Complete_Put()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB PDH_Set_Cyclic_Data()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA()
      STUB IPP_Process_Request()
      STUB IPP_Set_Response()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #DFS_18ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.5

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.5
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,30=>1175,
                                 &31=>1178,32=>1179,33=>1180,34=>1181,35=>1193,36=>1194,
                                 &37=>1195,38=>1209,39=>1207,40=>1219,41=>1228,42=>1230,43=>1231,
                                 &44=>1232,45=>1162,46=>1234,others=>0 }

      

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 80ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.5

   TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.6
   FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB DMI_Read_From_HW_4ms()
      STUB cdd_copy_discrete_s2p_data_to_dma()
      STUB cdd_copy_analogue_data_to_dma()
      STUB cdd_copy_frequency_data_to_dma()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MDI_Monitor_DSP_Inputs_4ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MSI_Monitor_SPPU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB SCT_Derive_Normalised_Values()
      STUB SCT_Derive_Calibrated_Values()
      STUB wrp_call_vplc()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_4ms_2ms_Flap()
      STUB DPX_Send_20ms_18ms_Flap()
      STUB DPX_Send_20ms_18ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB DPX_Receive_4ms_2ms_Flap()
      STUB DPX_Receive_20ms_18ms_Flap()
      STUB DPX_Receive_20ms_18ms()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MSI_SPPU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB MAO_Failure_Reaction_A()
      STUB wrp_call_fliv()
      STUB wrp_call_dinm_4ms_flap()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_fsam()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB DTE_Detailed_Results_Complete_Put()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB PDH_Set_Cyclic_Data()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA()
      STUB IPP_Process_Request()
      STUB IPP_Set_Response()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #DFS_18ms_Services_AF1();
      
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.6

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.6
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                  &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,12=>1047,
                                  &13=>1048,14=>1050,15=>1051,16=>1084,17=>1085,18=>1123,
                                  &19=>1124,20=>1126,21=>1127,22=>1129,23=>1130,24=>1146,
                                  &25=>1162,26=>1163,27=>1165,28=>1166,29=>1175,30=>1178,
                                  &31=>1179,32=>1180,33=>1181,34=>1193,35=>1194,36=>1195,
                                  &37=>1207,38=>1228,39=>1230,40=>1231,41=>1232,42=>1162,
                                  &43=>1234,others=>0 }

      

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 100ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      
      END ELEMENT

    END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.6

    TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.7
    FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle  1..4 => ()
      STUB IPP_Process_Request  1..4 => ()
      STUB IDS_S2P_Receive_IPA_Message  1..4 => ()
      STUB SIH_Read_From_HW  1..4 => ()
      STUB DMI_Read_From_HW_2ms  1..4 => ()
      STUB DMI_Read_From_HW_4ms  1..4 => ()
      STUB cdd_copy_discrete_s2p_data_to_dma  1..4 => ()
      STUB cdd_copy_analogue_data_to_dma  1..4 => ()
      STUB cdd_copy_frequency_data_to_dma  1..4 => ()
      STUB MDI_Monitor_DSP_Inputs_2ms  1..4 => ()
      STUB MDI_Monitor_DSP_Inputs_4ms  1..4 => ()
      STUB MFI_Monitor_FPPU_Input  1..4 => ()
      STUB MDF_Monitor_DFPPU_Input  1..4 => ()
      STUB MOI_Monitor_OTSSU_Input  1..4 => ()
      STUB MSI_Monitor_SPPU_Input  1..4 => ()
      STUB MHS_Monitor_HMot_Swash_Plate  1..4 => ()
      STUB MHP_Monitor_HMot_Position  1..4 => ()
      STUB MLS_Monitor_Load_Sensor_Input  1..4 => ()
      STUB SCT_Derive_Normalised_Values  1..4 => ()
      STUB SCT_Derive_Calibrated_Values  1..4 => ()
      STUB wrp_call_vplc  1..4 => ()
      STUB wrp_call_vhsc  1..4 => ()
      STUB wrp_call_vspc  1..4 => ()
      STUB wrp_call_fsum  1..4 => ()
      STUB wrp_call_foum  1..4 => ()
      STUB DPX_Send_2ms_0ms_Flap  1..4 => ()
      STUB DPX_Send_2ms_0ms  1..4 => ()
      STUB DPX_Send_4ms_2ms_Flap  1..4 => ()
      STUB DPX_Send_20ms_18ms_Flap  1..4 => ()
      STUB DPX_Send_20ms_18ms  1..4 => ()
      STUB FSS_Synchronise_Cycle  1..4 => ()
      STUB DPX_Receive_2ms_0ms_Flap  1..4 => ()
      STUB DPX_Receive_4ms_2ms_Flap  1..4 => ()
      STUB DPX_Receive_20ms_18ms_Flap  1..4 => ()
      STUB DPX_Receive_20ms_18ms  1..4 => ()
      STUB MDI_DSP_Failure_Reaction  1..4 => ()
      STUB MFI_FPPU_Failure_Reaction  1..4 => ()
      STUB MDF_DFPPU_Failure_Reaction  1..4 => ()
      STUB MOI_OTSSU_Failure_Reaction  1..4 => ()
      STUB MSI_SPPU_Failure_Reaction  1..4 => ()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction  1..4 => ()
      STUB MHP_HMot_Position_Failure_Reaction  1..4 => ()
      STUB MAO_Failure_Reaction_A  1..4 => ()
      STUB wrp_call_fliv  1..4 => ()
      STUB wrp_call_dinm_4ms_flap  1..4 => ()
      STUB DDO_copy_data_manager_to_spi_out  1..4 => ()
      STUB SDD_Write_To_HW  1..4 => ()
      STUB wrp_call_vmo2  1..4 => ()
      STUB wrp_call_fmhm  1..4 => ()
      STUB wrp_call_fsam  1..4 => ()
      STUB wrp_call_sfom  1..4 => ()
      STUB wrp_call_plpm_yellow  1..4 => ()
      STUB wrp_call_phpf  1..4 => ()
      STUB WTF_Calculate_OTSSU_Stop_Angle  1..4 => ()
      STUB DTE_Detailed_Results_Complete_Put  1..4 => ()
      STUB FSE_Process_Failure_Event_DPRAM  1..4 => ()
      STUB FSR_Perform_Core_Fast_System_Reaction  1..4 => ()
      STUB DDO_copy_data_manager_to_s2p_out  1..4 => ()
      STUB DDO_copy_data_manager_to_disc_out  1..4 => ()
      STUB DDO_copy_data_manager_to_spi_out 1..8 => ()           -- Scheduled 2 times every iteration
      STUB H02_HW_Out  1..4 => ()
      STUB PDH_Set_Cyclic_Data  1..4 => ()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA  1..4 => ()
      STUB IPP_Process_Request 1..8 => ()      -- Scheduled 2 times every iteration
      STUB IPP_Set_Response  1..4 => ()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #for (PTU_i=0;PTU_i<4;PTU_i++)
      #{
      #DFS_18ms_Services_AF1();
      #}
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.7

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.7
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1084,17=>1085,
                                 &18=>1123,19=>1124,20=>1126,21=>1127,22=>1129,23=>1130,
                                 &24=>1146,25=>1162,26=>1163,27=>1165,28=>1166,29=>1175,
                                 &30=>1178,31=>1179,32=>1180,33=>1181,34=>1192,35=>1193,
                                 &36=>1194,37=>1195,38=>1207,39=>1228,40=>1230,41=>1231,
                                 &42=>1232,43=>1162,44=>1234,others=>0 }

     

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 180ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.7

   TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.8
   FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle   1..36 => ()
      STUB IPP_Process_Request   1..36 => ()
      STUB IDS_S2P_Receive_IPA_Message   1..36 => ()
      STUB SIH_Read_From_HW   1..36 => ()
      STUB DMI_Read_From_HW_2ms   1..36 => ()
      STUB DMI_Read_From_HW_4ms   1..36 => ()
      STUB cdd_copy_discrete_s2p_data_to_dma   1..36 => ()
      STUB cdd_copy_analogue_data_to_dma   1..36 => ()
      STUB cdd_copy_frequency_data_to_dma   1..36 => ()
      STUB MDI_Monitor_DSP_Inputs_2ms   1..36 => ()
      STUB MDI_Monitor_DSP_Inputs_4ms   1..36 => ()
      STUB MFI_Monitor_FPPU_Input   1..36 => ()
      STUB MDF_Monitor_DFPPU_Input   1..36 => ()
      STUB MOI_Monitor_OTSSU_Input   1..36 => ()
      STUB MSI_Monitor_SPPU_Input   1..36 => ()
      STUB MHS_Monitor_HMot_Swash_Plate   1..36 => ()
      STUB MHP_Monitor_HMot_Position   1..36 => ()
      STUB MLS_Monitor_Load_Sensor_Input   1..36 => ()
      STUB SCT_Derive_Normalised_Values   1..36 => ()
      STUB SCT_Derive_Calibrated_Values   1..36 => ()
      STUB wrp_call_vplc   1..36 => ()
      STUB wrp_call_vhsc   1..36 => ()
      STUB wrp_call_vspc   1..36 => ()
      STUB wrp_call_fsum   1..36 => ()
      STUB wrp_call_foum   1..36 => ()
      STUB DPX_Send_2ms_0ms_Flap   1..36 => ()
      STUB DPX_Send_2ms_0ms   1..36 => ()
      STUB DPX_Send_4ms_2ms_Flap   1..36 => ()
      STUB DPX_Send_20ms_18ms_Flap   1..36 => ()
      STUB DPX_Send_20ms_18ms   1..36 => ()
      STUB FSS_Synchronise_Cycle   1..36 => ()
      STUB DPX_Receive_2ms_0ms_Flap   1..36 => ()
      STUB DPX_Receive_4ms_2ms_Flap   1..36 => ()
      STUB DPX_Receive_20ms_18ms_Flap   1..36 => ()
      STUB DPX_Receive_20ms_18ms   1..36 => ()
      STUB MDI_DSP_Failure_Reaction   1..36 => ()
      STUB MFI_FPPU_Failure_Reaction   1..36 => ()
      STUB MDF_DFPPU_Failure_Reaction   1..36 => ()
      STUB MOI_OTSSU_Failure_Reaction   1..36 => ()
      STUB MSI_SPPU_Failure_Reaction   1..36 => ()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction   1..36 => ()
      STUB MHP_HMot_Position_Failure_Reaction   1..36 => ()
      STUB MAO_Failure_Reaction_A   1..36 => ()
      STUB wrp_call_fliv   1..36 => ()
      STUB wrp_call_dinm_4ms_flap   1..36 => ()
      STUB DDO_copy_data_manager_to_spi_out   1..36 => ()
      STUB SDD_Write_To_HW   1..36 => ()
      STUB wrp_call_vmo2   1..36 => ()
      STUB wrp_call_fmhm   1..36 => ()
      STUB wrp_call_fsam   1..36 => ()
      STUB wrp_call_sfom   1..36 => ()
      STUB wrp_call_plpm_yellow   1..36 => ()
      STUB wrp_call_phpf   1..36 => ()
      STUB WTF_Calculate_OTSSU_Stop_Angle   1..36 => ()
      STUB DTE_Detailed_Results_Complete_Put   1..36 => ()
      STUB FSE_Process_Failure_Event_DPRAM   1..36 => ()
      STUB FSR_Perform_Core_Fast_System_Reaction   1..36 => ()
      STUB DDO_copy_data_manager_to_s2p_out   1..36 => ()
      STUB DDO_copy_data_manager_to_disc_out   1..36 => ()
      STUB DDO_copy_data_manager_to_spi_out 1..72 => ()        -- Scheduled 2 times every iteration
      STUB H02_HW_Out   1..36 => ()
      STUB PDH_Set_Cyclic_Data   1..36 => ()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA   1..36 => ()
      STUB IPP_Process_Request 1..72 => ()      -- Scheduled 2 times every iteration
      STUB IPP_Set_Response   1..36 => ()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #for (PTU_i=0;PTU_i<36;PTU_i++)
      #{
      #DFS_18ms_Services_AF1();
      #}
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.8

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.8
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                  &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,12=>1047,
                                  &13=>1048,14=>1050,15=>1051,16=>1084,17=>1085,18=>1123,
                                  &19=>1124,20=>1126,21=>1127,22=>1129,23=>1130,24=>1146,
                                  &25=>1162,26=>1163,27=>1165,28=>1166,29=>1175,30=>1178,
                                  &31=>1179,32=>1180,33=>1181,34=>1192,35=>1193,36=>1194,37=>1195,
                                  &38=>1207,39=>1228,40=>1230,41=>1231,42=>1232,43=>1162,
                                  &44=>1234,others=>0 }

    

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 900ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.8

   TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.9
   FAMILY nominal

      ELEMENT

      --Don't care stubs
      STUB S2M_Sync_2ms_toggle    1..5 => ()
      STUB IPP_Process_Request    1..5 => ()
      STUB IDS_S2P_Receive_IPA_Message    1..5 => ()
      STUB SIH_Read_From_HW    1..5 => ()
      STUB DMI_Read_From_HW_2ms    1..5 => ()
      STUB DMI_Read_From_HW_4ms    1..5 => ()
      STUB cdd_copy_discrete_s2p_data_to_dma    1..5 => ()
      STUB cdd_copy_analogue_data_to_dma    1..5 => ()
      STUB cdd_copy_frequency_data_to_dma    1..5 => ()
      STUB MDI_Monitor_DSP_Inputs_2ms    1..5 => ()
      STUB MDI_Monitor_DSP_Inputs_4ms    1..5 => ()
      STUB MFI_Monitor_FPPU_Input    1..5 => ()
      STUB MDF_Monitor_DFPPU_Input    1..5 => ()
      STUB MOI_Monitor_OTSSU_Input    1..5 => ()
      STUB MSI_Monitor_SPPU_Input    1..5 => ()
      STUB MHS_Monitor_HMot_Swash_Plate    1..5 => ()
      STUB MHP_Monitor_HMot_Position    1..5 => ()
      STUB MLS_Monitor_Load_Sensor_Input    1..5 => ()
      STUB SCT_Derive_Normalised_Values    1..5 => ()
      STUB SCT_Derive_Calibrated_Values    1..5 => ()
      STUB wrp_call_vplc    1..5 => ()
      STUB wrp_call_vhsc    1..5 => ()
      STUB wrp_call_vspc    1..5 => ()
      STUB wrp_call_fsum    1..5 => ()
      STUB wrp_call_foum    1..5 => ()
      STUB DPX_Send_2ms_0ms_Flap    1..5 => ()
      STUB DPX_Send_2ms_0ms    1..5 => ()
      STUB DPX_Send_4ms_2ms_Flap    1..5 => ()
      STUB DPX_Send_20ms_18ms_Flap    1..5 => ()
      STUB DPX_Send_20ms_18ms    1..5 => ()
      STUB FSS_Synchronise_Cycle    1..5 => ()
      STUB DPX_Receive_2ms_0ms_Flap    1..5 => ()
      STUB DPX_Receive_4ms_2ms_Flap    1..5 => ()
      STUB DPX_Receive_20ms_18ms_Flap    1..5 => ()
      STUB DPX_Receive_20ms_18ms    1..5 => ()
      STUB MDI_DSP_Failure_Reaction    1..5 => ()
      STUB MFI_FPPU_Failure_Reaction    1..5 => ()
      STUB MDF_DFPPU_Failure_Reaction    1..5 => ()
      STUB MOI_OTSSU_Failure_Reaction    1..5 => ()
      STUB MSI_SPPU_Failure_Reaction    1..5 => ()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction    1..5 => ()
      STUB MHP_HMot_Position_Failure_Reaction    1..5 => ()
      STUB MAO_Failure_Reaction_A    1..5 => ()
      STUB wrp_call_fliv    1..5 => ()
      STUB wrp_call_dinm_4ms_flap    1..5 => ()
      STUB DDO_copy_data_manager_to_spi_out    1..5 => ()
      STUB SDD_Write_To_HW    1..5 => ()
      STUB wrp_call_vmo2    1..5 => ()
      STUB wrp_call_fmhm    1..5 => ()
      STUB wrp_call_fsam    1..5 => ()
      STUB wrp_call_sfom    1..5 => ()
      STUB wrp_call_plpm_yellow    1..5 => ()
      STUB wrp_call_phpf    1..5 => ()
      STUB WTF_Calculate_OTSSU_Stop_Angle    1..5 => ()
      STUB DTE_Detailed_Results_Complete_Put    1..5 => ()
      STUB FSE_Process_Failure_Event_DPRAM    1..5 => ()
      STUB FSR_Perform_Core_Fast_System_Reaction    1..5 => ()
      STUB DDO_copy_data_manager_to_s2p_out    1..5 => ()
      STUB DDO_copy_data_manager_to_disc_out    1..5 => ()
      STUB DDO_copy_data_manager_to_spi_out 1..10 => ()        -- Scheduled 2 times every iteration
      STUB H02_HW_Out    1..5 => ()
      STUB PDH_Set_Cyclic_Data    1..5 => ()
      STUB RAD_Store_ARE_Spare_DFS_WorstCase_To_FCPA    1..5 => ()
      STUB IPP_Process_Request 1..10 => ()      -- Scheduled 2 times every iteration
      STUB IPP_Set_Response    1..5 => ()

      -- Pre setup, therefore the call ordering is not considered for this test
      #PTU_CheckStubOrder=FALSE;
      #for (PTU_i=0;PTU_i<5;PTU_i++)
      #{
      #DFS_18ms_Services_AF1();
      #}
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Pre_Setup.9

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.9
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,
                                 &30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,
                                 &35=>1193,36=>1194,37=>1195,38=>1209,39=>1207,40=>1219,41=>1228,
                                 &42=>1230,43=>1231,44=>1232,45=>1162,46=>1234,others=>0 }

    

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Verify the function calls when Timer_Count is initialised to 1000ms
      #PTU_CheckStubOrder=TRUE;
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.9

   TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.10
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,
                                 &30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,35=>1192,
                                 &36=>1193,37=>1194,38=>1195,39=>1209,40=>1207,41=>1219,42=>1228,
                                 &43=>1230,44=>1231,45=>1232,46=>1162,47=>1234,others=>0 }

      

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- Resets internal variables
      #PTU_CheckStubOrder=TRUE;
      #DFS_Initialise_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2849.Standard_Coupling.10

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.1
   FAMILY nominal

      ELEMENT

      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,
                                 &30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,35=>1192,
                                 &36=>1193,37=>1194,38=>1195,39=>1209,40=>1207,41=>1219,42=>1228,
                                 &43=>1230,44=>1231,45=>1232,46=>1162,47=>1234,others=>0 }

      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- StartDelay_Elapsed and OpModeFail are equal to FALSE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Initialise_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.1

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.2
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,
                                 &5=>1015,6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,
                                 &11=>1025,12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,
                                 &17=>1084,18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,
                                 &23=>1129,24=>1130,25=>1146,26=>1161,27=>1162,28=>1163,
                                 &29=>1165,30=>1166,31=>1170,32=>1175,33=>1178,34=>1179,
                                 &35=>1180,36=>1181,37=>1192,38=>1193,39=>1194,40=>1195,
                                 &41=>1209,42=>1196,43=>1197,44=>1198,45=>1199,46=>1200,
                                 &47=>1201,48=>1202,49=>1203,50=>1204,51=>1205,52=>1206,
                                 &53=>1207,54=>1219,55=>1228,56=>1230,57=>1231,58=>1232,
                                 &59=>1162,60=>1234,others=>0}
                                

      

      -- Inputs for the function DFS_Pre_Job_AF1

      VAR DMA_Database[DML_OPSW_CYCLE_COUNTER].Data,             init = 7,    ev = init
      VAR DMA_Database[DML_PWRUPCOMPLETED_SET_AT_CYCLE].Data,    init = 4,    ev = init
      VAR DMA_Database[DML_OPMODEFAIL].Data,                     init = FALSE,ev = init

      -- Stubs for the function DFS_8ms_Services_AF1
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB wrp_call_vtrf()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_ft5j()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB wrp_call_ctpm()
      STUB wrp_call_ctpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB wrp_call_f1pf()
      STUB wrp_call_f3ff()
      STUB wrp_call_flrf()
      STUB wrp_call_fltf()
      STUB wrp_call_fdrp()
      STUB wrp_call_fcdf()
      STUB wrp_call_ffrf()
      STUB wrp_call_fcbf()
      STUB ctd_flap_ctpactive_test_determination()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      
      -- StartDelay_Elapsed is equal to TRUE and OpModeFail is equal to FALSE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Pre_Job_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.2

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.3
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={  0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,
                                  &5=>1015,6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,
                                  &11=>1025,12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,
                                  &17=>1084,18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,
                                  &23=>1129,24=>1130,25=>1146,26=>1161,27=>1162,28=>1163,
                                  &29=>1165,30=>1166,31=>1170,32=>1175,33=>1178,34=>1179,
                                  &35=>1180,36=>1181,37=>1192,38=>1193,39=>1194,40=>1195,
                                  &41=>1209,42=>1196,43=>1197,44=>1198,45=>1199,46=>1200,
                                  &47=>1201,48=>1202,49=>1203,50=>1204,51=>1205,52=>1206,
                                  &53=>1207,54=>1219,55=>1228,56=>1230,57=>1231,58=>1232,
                                  &59=>1162,60=>1234,others=>0}

      VAR DMA_Database[DML_OPMODEFAIL].Data,                     init = FALSE,ev = init


      -- Stubs for the function DFS_8ms_Services_AF1
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB wrp_call_vtrf()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_ft5j()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB wrp_call_ctpm()
      STUB wrp_call_ctpf()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB wrp_call_f1pf()
      STUB wrp_call_f3ff()
      STUB wrp_call_flrf()
      STUB wrp_call_fltf()
      STUB wrp_call_fdrp()
      STUB wrp_call_fcdf()
      STUB wrp_call_ffrf()
      STUB wrp_call_fcbf()
      STUB ctd_flap_ctpactive_test_determination()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      
      -- StartDelay_Elapsed is equal to TRUE and OpModeFail is equal to FALSE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Pre_Job_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.3

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.4
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,
                                 &5=>1015,6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,
                                 &11=>1025,12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,
                                 &17=>1084,18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,
                                 &23=>1129,24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,
                                 &29=>1166,30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,35=>1192,
                                 &36=>1193,37=>1194,38=>1195,39=>1209,40=>1207,41=>1219,42=>1228,43=>1230,
                                 &44=>1231,45=>1232,46=>1162,47=>1234,others=>0 }

      

      -- Inputs for the function DFS_Pre_Job_AF1

      VAR DMA_Database[DML_OPSW_CYCLE_COUNTER].Data,             init = 6,    ev = init
      VAR DMA_Database[DML_PWRUPCOMPLETED_SET_AT_CYCLE].Data,    init = 3,    ev = init
      VAR DMA_Database[DML_OPMODEFAIL].Data,                     init = FALSE,ev = init

      -- Stubs for the function DFS_8ms_Services_BF1
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()

      -- StartDelay_Elapsed and OpModeFail are equal to FALSE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Initialise_AF1();
      #DFS_Pre_Job_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.4

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.5
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,5=>1015,
                                 &6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,11=>1025,
                                 &12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,17=>1084,
                                 &18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,23=>1129,
                                 &24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,29=>1166,
                                 &30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,35=>1192,
                                 &36=>1193,37=>1194,38=>1195,39=>1209,40=>1207,41=>1219,42=>1228,
                                 &43=>1230,44=>1231,45=>1232,46=>1162,47=>1234,others=>0 }

      
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- StartDelay_Elapsed and OpModeFail are equal to FALSE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Initialise_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.5

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.6
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;
      

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,
                                 &5=>1015,6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,
                                 &11=>1025,12=>1047,13=>1048,14=>1050,15=>1051,16=>1071,
                                 &17=>1084,18=>1085,19=>1123,20=>1124,21=>1126,22=>1127,
                                 &23=>1129,24=>1130,25=>1146,26=>1162,27=>1163,28=>1165,
                                 &29=>1166,30=>1175,31=>1178,32=>1179,33=>1180,34=>1181,35=>1192,
                                 &36=>1193,37=>1194,38=>1195,39=>1209,40=>1207,41=>1219,42=>1228,43=>1230,
                                 &44=>1231,45=>1232,46=>1162,47=>1234,others=>0 }


      
      -- Inputs for the function DFS_Pre_Job_AF1

      VAR DMA_Database[DML_OPSW_CYCLE_COUNTER].Data,             init = 8,    ev = init
      VAR DMA_Database[DML_PWRUPCOMPLETED_SET_AT_CYCLE].Data,    init = 6,    ev = init
      VAR DMA_Database[DML_OPMODEFAIL].Data,                     init = FALSE,ev = init
     
      -- Stubs for the function DFS_8ms_Services_BF1
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB wrp_call_vhsc()
      STUB wrp_call_vspc()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB SDD_Write_To_HW()
      STUB wrp_call_vmo2()
      STUB wrp_call_fmhm()
      STUB wrp_call_sfom()
      STUB wrp_call_plpm_yellow()
      STUB wrp_call_phpf()
      STUB wrp_call_mdem()
      STUB wrp_call_fmcf_A()
      STUB wrp_call_fisp()
      STUB wrp_call_fobp()
      STUB MIS_Determine_IAM_AF_Inhibits()
      STUB WTF_Calculate_OTSSU_Stop_Angle()
      STUB WET_WTB_Engagement_Test()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()
      STUB wrp_call_fsum()
      STUB wrp_call_foum()

      -- StartDelay_Elapsed and OpModeFail are equal to FALSE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Pre_Job_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.6

   TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.7
   FAMILY nominal

      ELEMENT
      -- To check the stub ordering
      #PTU_Index = 0;

      ARRAY PTU_StubOrder, init= { others=>0 },
                           &ev={ 0=>1000,1=>1002,2=>1003,3=>1005,4=>1007,
                                 &5=>1015,6=>1017,7=>1020,8=>1021,9=>1023,10=>1024,
                                 &11=>1025,12=>1050, 13=>1051, 14=>1071, 15=>1084,
                                 &16=>1085, 17=>1123, 18=>1124, 19=>1126, 20=>1127, 
                                 &21=>1129, 22=>1130, 23=>1146, 24=>1228, 25=>1230,
                                 &26=>1231, 27=>1232, 28=>1162, 29=>1234, others=>0 }


     
      -- Inputs for the function DFS_Pre_Job_AF1

      VAR DMA_Database[DML_OPSW_CYCLE_COUNTER].Data,             init = 8,    ev = init
      VAR DMA_Database[DML_PWRUPCOMPLETED_SET_AT_CYCLE].Data,    init = 5,    ev = init
      VAR DMA_Database[DML_OPMODEFAIL].Data,                     init = TRUE, ev = init   

      -- Stubs for the function DFS_8ms_Services_BF1
      STUB S2M_Sync_2ms_toggle()
      STUB IPP_Process_Request()
      STUB IDS_S2P_Receive_IPA_Message()
      STUB SIH_Read_From_HW()
      STUB DMI_Read_From_HW_2ms()
      STUB MDI_Monitor_DSP_Inputs_2ms()
      STUB MFI_Monitor_FPPU_Input()
      STUB MDF_Monitor_DFPPU_Input()
      STUB MOI_Monitor_OTSSU_Input()
      STUB MHS_Monitor_HMot_Swash_Plate()
      STUB MHP_Monitor_HMot_Position()
      STUB MLS_Monitor_Load_Sensor_Input()
      STUB DPX_Send_2ms_0ms_Flap()
      STUB DPX_Send_2ms_0ms()
      STUB DPX_Send_40ms_8ms()
      STUB FSS_Synchronise_Cycle()
      STUB DPX_Receive_2ms_0ms_Flap()
      STUB MDI_DSP_Failure_Reaction()
      STUB MFI_FPPU_Failure_Reaction()
      STUB MDF_DFPPU_Failure_Reaction()
      STUB MOI_OTSSU_Failure_Reaction()
      STUB MHS_HMot_Swash_Plate_Failure_Reaction()
      STUB MHP_HMot_Position_Failure_Reaction()
      STUB wrp_call_fliv()
      STUB FSE_Process_Failure_Event_DPRAM()
      STUB FSR_Perform_Core_Fast_System_Reaction()
      STUB DDO_copy_data_manager_to_s2p_out()
      STUB DDO_copy_data_manager_to_disc_out()
      STUB DDO_copy_data_manager_to_spi_out()
      STUB H02_HW_Out()

      -- StartDelay_Elapsed is equal to TRUE and OpModeFail is equal to TRUE
      #PTU_CheckStubOrder=TRUE;
      #DFS_Pre_Job_AF1();
      #DFS_8ms_Services_AF1();
      END ELEMENT

   END TEST -- TEST MTS_OPSW_P1-IVVP-2850.Standard_Coupling.7

END SERVICE -- DFS_8ms_Services_AF1

